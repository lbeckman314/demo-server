# name: Name of the program or language. Used to identify which process to spawn (e.g. 'ls').
#       Does not need to match the command of the process. Only needs to be unique.
#
# comm: Command of the process to spawn (e.g. 'ls').
#
# args: Whether arguments from the client should be appended to 'comm' before spawning.
#       default: false
#
# draw: Whether the client is expected to handle the output of the spawned process.
#       If false, the client should cease output to the terminal for the duration of the process.
#       default: true
#
# file: File extension of the language (e.g. 'c', 'cpp', 'rs').

# programs

[palindrome]
name = 'palindrome pal'
comm = 'palindrome'
args = true

[prime]
name = 'prime'
comm = 'prime'
args = true

[withfeathers]
name = 'withfeathers wf'
comm = 'python withfeathers.py'
args = true

[cowsay]
name = 'cowsay'
comm = 'cowsay'
args = true

[echo]
name = 'echo'
comm = 'echo'
args = true

[fortune]
name = 'fortune'
comm = 'fortune'
args = true

[lolcat]
name = 'lolcat'
comm = 'lolcat'
args = true

[ls]
name = 'ls'
comm = 'ls'
args = true

[pipes]
name = 'pipes.sh'
comm = 'pipes.sh'
args = true

# languages

[c]
name = 'c'
file = 'c'
comm = [
    'gcc -o <path> <path>.c',
    '<path>',
]

[cpp]
name = 'c++ cpp'
file = 'cpp'
comm = [
    'g++ -o <path> <path>.cpp',
    '<path>',
]

[go]
name = 'go'
file = 'go'
comm = 'go run <path>.go'

[haskell]
name = 'haskell'
file = 'hs'
comm = 'ghci <path>.hs'

[java]
name = 'java'
file = 'java'
comm = [
    'CLASS=$(grep "class" <path>.java | cut -d " " -f 3)',
    'NEW_PATH=<path>-java',
    'mkdir -p $NEW_PATH',
    'mv <path>.java $NEW_PATH/$CLASS.java',
    'cd $NEW_PATH',
    'javac $CLASS.java',
    'java $CLASS',
]

[javascript]
name = 'javascript'
file = 'js'
comm = 'node <path>.js'

[python]
name = 'python'
file = 'py'
comm = 'python <path>.py'

[ruby]
name = 'ruby'
file = 'rb'
comm = 'ruby <path>.rb'

[rust]
name = 'rust'
file = 'rs'
comm = [
    'rustc -o <path> <path>.rs',
    '<path>',
]

[schema]
name = 'scheme'
file = 'scm'
comm = 'scheme <path>.scm'

[markdown]
name = 'markdown'
file = 'md'
comm = [
    'pandoc -f markdown -t html -s <path>.md -o <path>.html -H <dir>/head.html',
    'echo <url><path>.html',
]

